import { SupabaseClient } from '@supabase/supabase-js';

export const migration = {
  name: '001_create_tables',
  up: async (supabase: SupabaseClient) => {
    // Create candidate table
    const { error: error1 } = await supabase.rpc('exec_sql', {
      sql_string: `
        CREATE TABLE IF NOT EXISTS public.candidate (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
          first_name TEXT,
          last_name TEXT,
          date_of_birth TIMESTAMP WITH TIME ZONE,
          gender TEXT,
          passport_id TEXT,
          email TEXT,
          whatsapp_number TEXT,
          department TEXT,
          position TEXT,
          cv_url TEXT,
          certificate_url TEXT
        );
      `
    });

    if (error1) {
      // Alternative approach using REST API
      await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/rest/v1/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.SUPABASE_SERVICE_ROLE_KEY}`,
          'Prefer': 'resolution=ignore-duplicates,return=minimal'
        },
        body: JSON.stringify({
          cmd: `
            CREATE TABLE IF NOT EXISTS public.candidate (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
              first_name TEXT,
              last_name TEXT,
              date_of_birth TIMESTAMP WITH TIME ZONE,
              gender TEXT,
              passport_id TEXT,
              email TEXT,
              whatsapp_number TEXT,
              department TEXT,
              position TEXT,
              cv_url TEXT,
              certificate_url TEXT
            );
          `
        })
      });
    }

    // Create partner table
    const { error: error2 } = await supabase.rpc('exec_sql', {
      sql_string: `
        CREATE TABLE IF NOT EXISTS public.partner (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
          first_name TEXT,
          last_name TEXT,
          email TEXT,
          phone_number TEXT,
          company_name TEXT,
          company_website TEXT,
          country TEXT,
          message TEXT
        );
      `
    });

    if (error2) {
      // Alternative approach using REST API
      await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/rest/v1/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.SUPABASE_SERVICE_ROLE_KEY}`,
          'Prefer': 'resolution=ignore-duplicates,return=minimal'
        },
        body: JSON.stringify({
          cmd: `
            CREATE TABLE IF NOT EXISTS public.partner (
              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
              created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
              first_name TEXT,
              last_name TEXT,
              email TEXT,
              phone_number TEXT,
              company_name TEXT,
              company_website TEXT,
              country TEXT,
              message TEXT
            );
          `
        })
      });
    }
  },
  
  down: async (supabase: SupabaseClient) => {
    // Drop tables on rollback
    await supabase.rpc('exec_sql', {
      sql_string: `
        DROP TABLE IF EXISTS public.candidate;
        DROP TABLE IF EXISTS public.partner;
      `
    });
  }
}; 