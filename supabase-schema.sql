-- Create candidate table
CREATE TABLE IF NOT EXISTS public.candidate (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
    first_name TEXT,
    last_name TEXT,
    date_of_birth TIMESTAMP WITH TIME ZONE,
    gender TEXT,
    passport_id TEXT,
    email TEXT,
    whatsapp_number TEXT,
    department TEXT,
    position TEXT,
    cv_url TEXT,
    certificate_url TEXT
);

-- Create partner table
CREATE TABLE IF NOT EXISTS public.partner (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
    first_name TEXT,
    last_name TEXT,
    email TEXT,
    phone_number TEXT,
    company_name TEXT,
    company_website TEXT,
    country TEXT,
    message TEXT
);

-- Create storage policies
-- First, make sure we have the correct bucket
INSERT INTO storage.buckets (id, name, public) 
VALUES ('marina-prima-sukses-web', 'marina-prima-sukses-web', false)
ON CONFLICT (id) DO NOTHING;

-- Create policy for authenticated users to view files
CREATE POLICY "Allow authenticated users to view files"
ON storage.objects
FOR SELECT
TO authenticated
USING (bucket_id = 'marina-prima-sukses-web');

-- Create policy for service role to upload files
CREATE POLICY "Allow service role to upload files"
ON storage.objects
FOR INSERT
TO service_role
WITH CHECK (bucket_id = 'marina-prima-sukses-web'); 